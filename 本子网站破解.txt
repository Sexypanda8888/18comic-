网址:https://18comic.org/photo/262041
首先发现无法直接获得图片，因为拿到的url的图片是被加密过的，
在经过JS解密后才展示出来。
但是这个展示是如何进行的?后来才知道是使用canva
是在观察网页如何动态变化的过程中，发现了网页会根据滚动来一个个展现canvas
其他看不到的部分都是原来的未解密的。


检测scroll，每次滚动都会对全部的图片进行refresh 和 检测是否要创建或者删除canvas

我应该已经找到了使用onImageLoaded 函数是创建和将canvas复制img的值的时候，但是它会把图片分成十份（有一个for循环） num是固定的十份。然后在canvas上进行分段的涂抹，因此可以断定切割方式是固定的，我可以非常简单地复现。

先将canvas通过 img.after生成在后面，慢慢修改
然后通过addClass函数将原图像隐藏起来。

我就是挺奇怪，改的过程中我看不到，还得经过一堆奇怪的代码我才能看到结果。不明白，不知道为什么页面要给锁住，才导致我不能看到程序运行的实时过程，才翻不下去导致了判断错误。对页面暂停的理解不够。



 ctx.drawImage(img, 0, y, copyW, copyH, 0, py, copyW, copyH);
分别是  图片、剪切开始坐标 、 剪切图片长度和高度 、 复制到画布上的位置  、复制到画布上显示的长和高（放缩）算法就在前面了！


2021/8/10 23:27 
改版后，发现aid变量有意义了。要和两个写死的值（我估计是漫画的数量编号）进行比较，从而一步步进行迭代。
改版后网站的反爬虫增加了eval以及其他的混淆，但是对我们分析其代码并没有什么阻碍，感觉没什么意义。
比较大的变化是，会将aid和文件的名字（00001）进行相加后取md5，取最后一位的asc2码进行余10操作,最后得到一张图片需要切的份数。
总体不难，这次时间都花到代码移指上去了。